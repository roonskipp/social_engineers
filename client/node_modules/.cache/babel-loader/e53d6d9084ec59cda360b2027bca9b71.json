{"ast":null,"code":"var _jsxFileName = \"/Users/Tobias/Desktop/social_engineers/client/src/components/CreateGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateGame(props) {\n  _s();\n\n  const [redirectToLobby, setRedirectToLobby] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [gamesize, setGamesize] = useState(\"2\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(\"You clicked submit. Value was:\" + gamesize);\n    fetch(\"/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/Json'\n      },\n      body: JSON.stringify(this.state)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      let new_gamestate = JSON.parse(data);\n      console.log(new_gamestate.gamesize);\n      console.log(new_gamestate != null); // Want some proper check here if the game was correctly created TODO\n\n      if (new_gamestate != null) {\n        // Redirect to lobby\n        this.props.setGamestate(new_gamestate);\n        setRedirectToLobby(true);\n      }\n    });\n  };\n\n  if (redirectToLobby) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Gamesize\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: gamesize,\n            onChange: e => setGamesize(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(CreateGame, \"gRVjC2uB666znJ6Dtg5ZKBNx2RE=\");\n\n_c = CreateGame;\nexport default CreateGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"sources":["/Users/Tobias/Desktop/social_engineers/client/src/components/CreateGame.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Link","Redirect","CreateGame","props","redirectToLobby","setRedirectToLobby","username","setUsername","gamesize","setGamesize","handleSubmit","e","preventDefault","alert","fetch","method","headers","body","JSON","stringify","state","then","res","json","data","console","log","new_gamestate","parse","setGamestate","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,QALJ,QAMS,kBANT;;;AAQA,SAASC,UAAT,CAAqBC,KAArB,EAA2B;AAAA;;AAEvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,GAAD,CAAxC;;AAGA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,mCAAmCL,QAApC,CAAL;AACAM,IAAAA,KAAK,CAAC,SAAD,EAAY;AACbC,MAAAA,MAAM,EAAE,MADK;AAEbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFI;AAKbC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB;AALO,KAAZ,CAAL,CAOOC,IAPP,CAOaC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPrB,EAQOF,IARP,CAQaG,IAAD,IAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAIG,aAAa,GAAGT,IAAI,CAACU,KAAL,CAAWJ,IAAX,CAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,CAACnB,QAA1B;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAYC,aAAa,IAAI,IAA7B,EAJU,CAKV;;AACA,UAAGA,aAAa,IAAI,IAApB,EAAyB;AACrB;AACA,aAAKxB,KAAL,CAAW0B,YAAX,CAAwBF,aAAxB;AACAtB,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;AACJ,KAnBT;AAoBG,GAvBP;;AA4BA,MAAGD,eAAH,EAAmB;AACX,wBACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GANL,MAOQ;AACA,wBACI;AAAA,6BACI;AAAM,QAAA,QAAQ,EAAEM,YAAhB;AAAA,gCACI;AAAA,8CACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEF,QAA1B;AAAoC,YAAA,QAAQ,EAAEG,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACmB,MAAF,CAASC,KAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA,8CACI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEzB,QAA1B;AAAoC,YAAA,QAAQ,EAAEK,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACmB,MAAF,CAASC,KAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;AACR;;GA3DQ7B,U;;KAAAA,U;AA8DT,eAAeA,UAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n\nfunction CreateGame (props){\n\n    const [redirectToLobby, setRedirectToLobby] = useState(false)\n    const [username, setUsername] = useState(\"\")\n    const [gamesize, setGamesize] = useState(\"2\")\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        alert(\"You clicked submit. Value was:\" + gamesize);\n        fetch(\"/create\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/Json'\n            },\n            body: JSON.stringify(this.state)\n        })\n              .then((res) => res.json())\n              .then((data) => {\n                    console.log(data);\n                    let new_gamestate = JSON.parse(data);\n                    console.log(new_gamestate.gamesize);\n                    console.log(new_gamestate != null);\n                    // Want some proper check here if the game was correctly created TODO\n                    if(new_gamestate != null){\n                        // Redirect to lobby\n                        this.props.setGamestate(new_gamestate)\n                        setRedirectToLobby(true)\n                    }\n                });\n          };\n\n\n\n    \n    if(redirectToLobby){\n            return (\n                <div>\n                    <Redirect to=\"/lobby\"/>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div>\n                    <form onSubmit={handleSubmit}>\n                        <label>Gamesize\n                            <input type=\"text\" value={gamesize} onChange={e => setGamesize(e.target.value)}></input>\n                        </label>\n                        <br></br>\n                        <label>Username\n                            <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)}></input>\n                        </label>\n                        <button type=\"submit\">Create game</button>\n                    </form>\n                </div>\n            )\n\n        }\n}\n\n\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}