{"ast":null,"code":"var _jsxFileName = \"/Users/Tobias/Desktop/social_engineers/client/src/components/CreateGame.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateGame() {\n  handleSubmit = e => {\n    e.preventDefault();\n    alert(\"You clicked submit. Value was:\" + this.state.gamesize);\n    fetch(\"/create\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/Json'\n      },\n      body: JSON.stringify(this.state)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      let new_gamestate = JSON.parse(data);\n      console.log(new_gamestate.gamesize);\n      console.log(new_gamestate != null); // Want some proper check here if the game was correctly created TODO\n\n      if (new_gamestate != null) {\n        // Redirect to lobby\n        this.setState({\n          gamestate: new_gamestate\n        });\n        console.log(\"hi\");\n        this.props.gameCreatedCallback(this.state.gamestate);\n        this.setState({\n          redirectToLobby: true\n        });\n      }\n    });\n  };\n\n  handleGamesizeChange = e => {\n    this.setState({\n      gamesize: e.target.value\n    });\n  };\n\n  handleUsernameChange = e => {\n    this.setState({\n      username: e.target.value\n    });\n  };\n\n  if (this.state.redirectToLobby) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Gamesize\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.gamesize,\n            onChange: this.handleGamesizeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.username,\n            onChange: this.handleUsernameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_c = CreateGame;\nexport default CreateGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateGame\");","map":{"version":3,"sources":["/Users/Tobias/Desktop/social_engineers/client/src/components/CreateGame.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","CreateGame","handleSubmit","e","preventDefault","alert","state","gamesize","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","new_gamestate","parse","setState","gamestate","props","gameCreatedCallback","redirectToLobby","handleGamesizeChange","target","value","handleUsernameChange","username"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n  } from \"react-router-dom\";\n\nfunction CreateGame (){\n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        alert(\"You clicked submit. Value was:\" + this.state.gamesize);\n        fetch(\"/create\", {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/Json'\n            },\n            body: JSON.stringify(this.state)\n        })\n              .then((res) => res.json())\n              .then((data) => {\n                    console.log(data);\n                    let new_gamestate = JSON.parse(data);\n                    console.log(new_gamestate.gamesize);\n                    console.log(new_gamestate != null);\n                    // Want some proper check here if the game was correctly created TODO\n                    if(new_gamestate != null){\n                        // Redirect to lobby\n                        this.setState({gamestate: new_gamestate})\n                        console.log(\"hi\")\n                        this.props.gameCreatedCallback(this.state.gamestate)\n                        this.setState({redirectToLobby: true})\n                    }\n                });\n          };\n\n    handleGamesizeChange = (e) => {\n        this.setState({gamesize: e.target.value})\n    }\n\n    handleUsernameChange = (e) => {\n        this.setState({username: e.target.value})\n    }\n\n\n    \n    if(this.state.redirectToLobby){\n            return (\n                <div>\n                    <Redirect to=\"/lobby\"/>\n                </div>\n            )\n        }\n        else{\n            return (\n                <div>\n                    <form onSubmit={this.handleSubmit}>\n                        <label>Gamesize\n                            <input type=\"text\" value={this.state.gamesize} onChange={this.handleGamesizeChange}></input>\n                        </label>\n                        <br></br>\n                        <label>Username\n                            <input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange}></input>\n                        </label>\n                        <button type=\"submit\">Create game</button>\n                    </form>\n                </div>\n            )\n\n        }\n}\n\n\nexport default CreateGame;"]},"metadata":{},"sourceType":"module"}